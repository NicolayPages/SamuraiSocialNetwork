{"version":3,"sources":["components/common/Paginator/Paginator.module.scss","components/Users/Search/Search.module.scss","components/Users/Users.module.scss","selectors/users-selectors.ts","components/common/Paginator/Paginator.tsx","components/Users/Search/Search.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUserCount","totalUserCount","getIsFetching","isFetching","getIsFollowing","isFollowing","getCurrentPage","currentPage","getFilter","filter","createSelector","u","Paginator","React","memo","props","pagesCount","Math","ceil","pages","i","push","portionSize","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","p","map","onClick","e","onPageChanged","className","s","selected","g","paginator","pagBtn","list","Search","useSelector","initialValues","term","friend","String","wrapper","onSubmit","values","onFilterChanged","form","input","name","placeholder","select","as","value","Users","isAuth","onFollowUsers","onUnfollowUsers","itemsArr","UserItem","photos","id","status","followed","content","title","Preloader","items","length","notFound","item","ava","avaLink","to","src","small","userPhoto","alt","info","infoUser","btns","disabled","some","followedBtn","queryString","require","UsersContainer","getIsAuth","dispatch","useDispatch","history","useHistory","useEffect","parsed","parse","location","search","actualPage","actualFilter","page","Number","requestUsers","query","pathname","stringify","userId","followUsers","unfollowUsers"],"mappings":"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","file":"static/js/8.582d99f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1g-A_\",\"list\":\"Paginator_list__lX_AV\",\"selected\":\"Paginator_selected__2DDt8\",\"pagBtn\":\"Paginator_pagBtn__9j3hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__Q3eoN\",\"form\":\"Search_form__1hW7C\",\"input\":\"Search_input__26f2G\",\"select\":\"Search_select__3AL3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__3o1TE\",\"title\":\"Users_title__1dZPm\",\"items\":\"Users_items__MbajM\",\"item\":\"Users_item__3fvMN\",\"info\":\"Users_info__oDPzh\",\"infoUser\":\"Users_infoUser__aR1Ou\",\"name\":\"Users_name__sikwh\",\"status\":\"Users_status__2E__z\",\"followedBtn\":\"Users_followedBtn__2WXa5\",\"ava\":\"Users_ava__2xPQv\",\"avaLink\":\"Users_avaLink__2TvYT\",\"notFound\":\"Users_notFound__3WSnO\"};","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n   return state.usersPage.users\r\n};\r\nexport const getPageSize = (state: AppStateType) => {\r\n   return state.usersPage.pageSize\r\n};\r\nexport const getTotalUserCount = (state: AppStateType) => {\r\n   return state.usersPage.totalUserCount\r\n};\r\nexport const getIsFetching = (state: AppStateType) => {\r\n   return state.usersPage.isFetching\r\n};\r\nexport const getIsFollowing = (state: AppStateType) => {\r\n   return state.usersPage.isFollowing\r\n};\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n   return state.usersPage.currentPage\r\n};\r\nexport const getFilter = (state: AppStateType) => {\r\n   return state.usersPage.filter\r\n};\r\n\r\n\r\n//test \r\nexport const getUsersSelector = (state: AppStateType) => {\r\n   return getUsers(state).filter(u => true)\r\n};\r\nexport const getUsersSuperSelector = createSelector(getUsers, getIsFetching,\r\n   (users) => {\r\n      return users.filter(u => true)\r\n   })","import React, { useState } from 'react';\r\nimport s from './Paginator.module.scss'\r\n\r\n\r\ntype PropsType = {\r\n   totalUserCount: number\r\n   pageSize: number\r\n   currentPage: number\r\n   onPageChanged: (p: number) => void\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = React.memo((props) => {\r\n   let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n   let pages = [];\r\n   for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i);\r\n   };\r\n\r\n   let portionSize = props.pageSize;\r\n   let portionCount = Math.ceil(props.totalUserCount / portionSize);\r\n   let [portionNumber, setPortionNumber] = useState(1);\r\n   let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n   let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n   let pagination = pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\r\n      return <li key={p} onClick={(e) => { props.onPageChanged(p) }} className={props.currentPage === p ? s.selected : s.g}>{p}</li>\r\n   });\r\n\r\n   return (\r\n      <div className={s.paginator}>\r\n         {portionNumber > 1 &&\r\n            <button className={s.pagBtn} onClick={() => (setPortionNumber(portionNumber - 1))}>prev</button>}\r\n         <ul className={s.list}>{pagination}</ul>\r\n         {portionCount > portionNumber &&\r\n            <button className={s.pagBtn} onClick={() => (setPortionNumber(portionNumber + 1))}>next</button>}\r\n      </div>\r\n   );\r\n})\r\n\r\nexport default Paginator;\r\n\r\n","import { Field, Form, Formik } from 'formik';\r\nimport * as React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { FilterTypes } from '../../../redux/users-reducer';\r\nimport { getFilter } from '../../../selectors/users-selectors';\r\nimport s from './Search.module.scss';\r\n\r\n\r\ntype PropsType = {\r\n   onFilterChanged: (filter: FilterTypes) => void\r\n}\r\n\r\n\r\nexport const Search: React.FC<{} & PropsType> = React.memo((props) => {\r\n\r\n   const filter = useSelector(getFilter)\r\n\r\n   const initialValues: any = { term: filter.term, friend: String(filter.friend) };\r\n\r\n   let onSubmit = (values: any) => {\r\n      props.onFilterChanged(values)\r\n   }\r\n\r\n   return (\r\n      <div className={s.wrapper}>\r\n         <Formik initialValues={initialValues} onSubmit={onSubmit} >\r\n            <Form className={s.form}>\r\n               <Field className={s.input} name=\"term\" placeholder=\"find users...\" />\r\n               <Field className={s.select} name=\"friend\" as=\"select\">\r\n                  <option value=\"null\">All users</option>\r\n                  <option value=\"true\">Only followed</option>\r\n                  <option value=\"false\">Only unfollowed</option>\r\n               </Field>\r\n               <button>Find</button>\r\n            </Form>\r\n         </Formik>\r\n      </div>\r\n   );\r\n})\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { FilterTypes } from \"../../redux/users-reducer\";\r\nimport { PhotosType, UsersType } from \"../../types/types\";\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { Search } from \"./Search/Search\";\r\nimport s from \"./Users.module.scss\";\r\n\r\ntype PropsUsersType = {\r\n   totalUserCount: number\r\n   pageSize: number\r\n   currentPage: number\r\n   users: Array<UsersType> | null | any\r\n   isFollowing: boolean\r\n   isAuth: boolean\r\n   isFetching: boolean\r\n\r\n   onPageChanged: (p: number) => void\r\n   onFollowUsers: (id: number) => void\r\n   onUnfollowUsers: (id: number) => void\r\n   onFilterChanged: (filter: FilterTypes) => void\r\n\r\n}\r\ntype PropsItemsType = {\r\n   id: number\r\n   photos: PhotosType\r\n   isAuth: boolean\r\n   followed: boolean\r\n   isFollowing: any\r\n   status: string\r\n   name: string\r\n\r\n   onFollowUsers: (id: number) => void\r\n   onUnfollowUsers: (id: number) => void\r\n}\r\n\r\n\r\nexport const Users: React.FC<PropsUsersType> = React.memo((props) => {\r\n\r\n   const { totalUserCount, pageSize, isFetching, currentPage, users, isFollowing, isAuth, onPageChanged, onFollowUsers, onUnfollowUsers, onFilterChanged } = props\r\n\r\n   let itemsArr = users.map((u: UsersType) => < UserItem\r\n      onUnfollowUsers={onUnfollowUsers}\r\n      onFollowUsers={onFollowUsers}\r\n      isFollowing={isFollowing}\r\n      isAuth={isAuth}\r\n\r\n      key={u.id}\r\n      photos={u.photos}\r\n      id={u.id}\r\n      status={u.status}\r\n      name={u.name}\r\n      followed={u.followed}\r\n\r\n   />)\r\n\r\n   return (\r\n      <div className={s.wrapper}>\r\n         <div className={s.content}>\r\n            <h1 className={s.title}>Users</h1>\r\n            <Search onFilterChanged={onFilterChanged} />\r\n            {\r\n               isFetching ? <Preloader /> :\r\n                  <div className={s.items} >\r\n                     {\r\n                        itemsArr.length !== 0 ?\r\n                           itemsArr :\r\n                           <p className={s.notFound}>User is not found...</p>\r\n                     }\r\n                  </div>\r\n            }\r\n            <Paginator\r\n               totalUserCount={totalUserCount}\r\n               pageSize={pageSize}\r\n               currentPage={currentPage}\r\n               onPageChanged={onPageChanged}\r\n            />\r\n         </div>\r\n      </div >\r\n   );\r\n})\r\n\r\nconst UserItem: React.FC<PropsItemsType> = React.memo((props) => {\r\n\r\n   const { onFollowUsers, onUnfollowUsers, id, photos, isAuth, followed, isFollowing, status, name } = props\r\n\r\n   return (\r\n      <div className={s.item} key={id}>\r\n         <div className={s.ava}>\r\n            <NavLink className={s.avaLink} to={'/profile/' + id}>\r\n               <img src={photos.small != null ? photos.small : userPhoto} alt=\"\" />\r\n            </NavLink>\r\n         </div>\r\n         <div className={s.info}>\r\n            <div className={s.infoUser}>\r\n               <h2 className={s.name}>{name}</h2>\r\n               <p className={s.status}>{status != null ? status : \"Something about user\"}</p>\r\n            </div>\r\n            {isAuth &&\r\n               <div className={s.btns}>\r\n                  {\r\n                     followed\r\n                        ? <button disabled={isFollowing.some((id: number | null) => id === id)}\r\n                           className={s.followedBtn} onClick={() => { onUnfollowUsers(id) }}>unfollow</button>\r\n                        : <button disabled={isFollowing.some((id: number | null) => id === id)}\r\n                           className={s.followedBtn} onClick={() => { onFollowUsers(id) }}>follow</button>\r\n                  }\r\n               </div>\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FilterTypes, followUsers, requestUsers, unfollowUsers } from \"../../redux/users-reducer\";\r\nimport { getIsAuth } from '../../selectors/auth-selectors';\r\nimport { getCurrentPage, getFilter, getIsFetching, getIsFollowing, getPageSize, getTotalUserCount, getUsers } from \"../../selectors/users-selectors\";\r\nimport { Users } from \"./Users\";\r\n\r\nconst queryString = require('query-string');\r\nexport type QueryTypeParams = { term: string, page: string, friend: string }\r\n\r\n\r\nconst UsersContainer: React.FC = React.memo(() => {\r\n\r\n   const users = useSelector(getUsers)\r\n   const pageSize = useSelector(getPageSize)\r\n   const totalUserCount = useSelector(getTotalUserCount)\r\n   const currentPage = useSelector(getCurrentPage)\r\n   const isFetching = useSelector(getIsFetching)\r\n   const isFollowing = useSelector(getIsFollowing)\r\n   const isAuth = useSelector(getIsAuth)\r\n   const filter = useSelector(getFilter)\r\n   const dispatch = useDispatch()\r\n   const history = useHistory()\r\n\r\n   useEffect(() => {\r\n      const parsed = queryString.parse(history.location.search) as QueryTypeParams\r\n      let actualPage = currentPage\r\n      let actualFilter = filter\r\n\r\n      if (!!parsed.page) actualPage = Number(parsed.page)\r\n      if (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term as string }\r\n\r\n      switch (parsed.friend) {\r\n         case 'null':\r\n            actualFilter = { ...actualFilter, friend: null }\r\n            break;\r\n         case 'false':\r\n            actualFilter = { ...actualFilter, friend: false }\r\n            break;\r\n         case 'true':\r\n            actualFilter = { ...actualFilter, friend: true }\r\n            break;\r\n      }\r\n\r\n      dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n\r\n      const query: any = {}\r\n\r\n      if (!!filter.term) query.term = filter.term\r\n      if (filter.friend !== null) query.friend = String(filter.friend)\r\n      if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n      history.push({\r\n         pathname: '/users',\r\n         search: queryString.stringify(query)\r\n      })\r\n\r\n   }, [filter, currentPage]);\r\n\r\n\r\n   let onPageChanged = (p: number) => {\r\n      dispatch(requestUsers(p, pageSize, filter))\r\n   };\r\n   let onFilterChanged = (filter: FilterTypes) => {\r\n      dispatch(requestUsers(1, pageSize, filter))\r\n   }\r\n   let onFollowUsers = (userId: number) => {\r\n      dispatch(followUsers(userId))\r\n   }\r\n   let onUnfollowUsers = (userId: number) => {\r\n      dispatch(unfollowUsers(userId))\r\n   }\r\n\r\n   return (<>\r\n      <Users\r\n         totalUserCount={totalUserCount}\r\n         pageSize={pageSize}\r\n         currentPage={currentPage}\r\n         users={users}\r\n         isFollowing={isFollowing}\r\n         isAuth={isAuth}\r\n         isFetching={isFetching}\r\n\r\n         onPageChanged={onPageChanged}\r\n         onFilterChanged={onFilterChanged}\r\n         onFollowUsers={onFollowUsers}\r\n         onUnfollowUsers={onUnfollowUsers}\r\n      />\r\n   </>\r\n   );\r\n})\r\n\r\n\r\n\r\nexport default UsersContainer\r\n"],"sourceRoot":""}
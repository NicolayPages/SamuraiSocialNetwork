{"version":3,"sources":["components/common/FormElements/FormElements.jsx","components/common/FormElements/FormElements.module.scss","utilits/validators/validators.js","components/Login/Login.module.scss","components/Login/Login.jsx"],"names":["Textarea","input","meta","props","hasError","touched","error","className","s","formControl","span","Input","spanInput","module","exports","required","value","maxLengthCreator","maxLength","length","maxLength30","LoginContainer","onSubmit","formData","dispatch","authUserLogIn","email","password","rememberMe","captcha","this","isAuth","to","container","title","LoginReduxForm","React","Component","reduxForm","form","handleSubmit","component","type","name","placeholder","tabIndex","validate","flex","checkbox","formSummeryError","src","buttonWrapper","button","compose","connect","state","getIsAuth","auth"],"mappings":"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","file":"static/js/7.4e2671c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './FormElements.module.scss'\r\n\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n         <div><textarea {...input} {...props} /></div>\r\n         {hasError && <span className={s.span}>{meta.error}</span>}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n         <div><input {...input} {...props} /></div>\r\n         {hasError && <span className={s.spanInput}>{meta.error}</span>}\r\n      </div>\r\n   );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormElements_formControl__3KJbR\",\"error\":\"FormElements_error__1hf5q\",\"span\":\"FormElements_span__3JHKa\",\"spanInput\":\"FormElements_spanInput__1cELw\"};","export const required = value => {\r\n   if (value) return undefined;\r\n   return 'Field is required!'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n   return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__25mRJ\",\"title\":\"Login_title__1xUq8\",\"form\":\"Login_form__18eO-\",\"input\":\"Login_input__71n0k\",\"flex\":\"Login_flex__1QQYp\",\"checkbox\":\"Login_checkbox__1gMeM\",\"buttonWrapper\":\"Login_buttonWrapper__2AuT5\",\"button\":\"Login_button__wv6BG\",\"formSummeryError\":\"Login_formSummeryError__27mOD\",\"captcha\":\"Login_captcha__3JjdZ\"};","import React from 'react';\r\nimport s from './Login.module.scss';\r\nimport { reduxForm, Field, reset } from 'redux-form';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { authUserLogIn } from './../../redux/auth-reducer';\r\nimport { Input } from '../common/FormElements/FormElements';\r\nimport { maxLengthCreator, required } from '../../utilits/validators/validators';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getIsAuth } from '../../redux/auth-selectors';\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nclass LoginContainer extends React.Component {\r\n   constructor(props) {\r\n      super(props)\r\n   }\r\n   onSubmit = (formData, dispatch) => {\r\n      this.props.authUserLogIn(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n   };\r\n   render() {\r\n\r\n      if (this.props.isAuth) {\r\n         return <Redirect to={'/profile'} />\r\n      }\r\n      return (\r\n         <div className={s.container}>\r\n            <h1 className={s.title}>Login</h1>\r\n            <LoginReduxForm onSubmit={this.onSubmit} captcha={this.props.captcha} />\r\n         </div>\r\n      );\r\n   };\r\n};\r\n\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n      <form className={s.form} onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field\r\n               component={Input}\r\n               className={s.input}\r\n               type=\"text\"\r\n               name='email'\r\n               placeholder='Email'\r\n               tabIndex={1}\r\n               validate={[required, maxLength30]} />\r\n         </div>\r\n         <div>\r\n            <Field component={Input} className={s.input} type=\"password\" name='password' placeholder='Password' tabIndex={2} validate={[required, maxLength30]} />\r\n         </div>\r\n         <div className={s.flex}>\r\n            <Field component={'input'} className={s.checkbox} type=\"checkbox\" name='rememberMe' tabIndex={3} />\r\n            <span> remember me</span>\r\n         </div>\r\n         {props.error && <span className={s.formSummeryError}>{props.error}</span>}\r\n         {props.captcha && <div>\r\n            <img className={s.captcha} src={props.captcha} />\r\n            <Field component={Input} className={s.input} type=\"text\" name='captcha' placeholder='Captcha' />\r\n         </div>}\r\n         <div className={s.buttonWrapper}>\r\n            <button className={s.button} tabIndex={4}>Login</button>\r\n         </div>\r\n      </form >\r\n   );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: getIsAuth(state),\r\n      captcha: state.auth.captcha,\r\n   };\r\n};\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, { authUserLogIn })\r\n)(LoginContainer);"],"sourceRoot":""}
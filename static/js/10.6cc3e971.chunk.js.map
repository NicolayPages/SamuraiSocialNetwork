{"version":3,"sources":["components/Login/Login.module.scss","components/Login/Login.tsx"],"names":["module","exports","LoginContainer","React","memo","isAuth","useSelector","getIsAuth","captcha","getCaptcha","authError","getAuthError","dispatch","useDispatch","to","Login","onSubmitForm","formData","authUserLogIn","email","password","rememberMe","props","className","s","container","title","LoginForm","onSubmit","SignupSchema","Yup","shape","required","initialValues","values","actions","validationSchema","errors","touched","form","component","input","error","type","name","placeholder","tabIndex","src","flex","checkbox","formSummeryError","buttonWrapper","button"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,wBAAwB,cAAgB,6BAA6B,OAAS,sBAAsB,iBAAmB,gCAAgC,QAAU,yB,iCCDhX,oGAkBMC,EAA2BC,IAAMC,MAAK,WACzC,IAAMC,EAASC,YAAYC,KACrBC,EAAUF,YAAYG,KACtBC,EAAYJ,YAAYK,KACxBC,EAAWC,cAOjB,OAAIR,EACM,cAAC,IAAD,CAAUS,GAAI,aAIrB,cAACC,EAAD,CAAOC,aATS,SAACC,GACjBL,EAASM,YAAcD,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAYJ,EAAST,WAQrDA,QAASA,EAASE,UAAWA,OAIhEK,EAAuBZ,IAAMC,MAAK,SAACkB,GACtC,OACG,sBAAKC,UAAWC,IAAEC,UAAlB,UACG,oBAAIF,UAAWC,IAAEE,MAAjB,mBACA,cAAEC,EAAF,CAAYC,SAAUN,EAAMN,aAAcR,QAASc,EAAMd,QAASE,UAAWY,EAAMZ,kBAMtFiB,EAA2BxB,IAAMC,MAAK,SAACkB,GAC1C,IAAQM,EAAkCN,EAAlCM,SAAUpB,EAAwBc,EAAxBd,QAASE,EAAeY,EAAfZ,UAMrBmB,EAAeC,MAAaC,MAAM,CACrCZ,MAAOW,MACHE,SAAS,qBACbZ,SAAUU,MACNE,SAAS,uBAKhB,OACG,cAAC,IAAD,CACGC,cAJ4B,CAAEd,MAAO,GAAIC,SAAU,GAAIC,YAAY,EAAOb,QAAS,IAKnFoB,SAhBa,SAACM,EAAaC,GAC9BP,EAASM,IAgBNE,iBAAkBP,EAHrB,SAKI,gBAAGQ,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACE,eAAC,IAAD,CAAMf,UAAWC,IAAEe,KAAnB,UACG,8BACG,cAAC,IAAD,CACGC,UAAW,QACXjB,UAAWC,IAAEiB,MAAQ,KAAOJ,EAAOlB,OAASmB,EAAQnB,MAAQK,IAAEkB,MAAQ,MACtEC,KAAK,QACLC,KAAK,QACLC,YAAaR,EAAOlB,OAASmB,EAAQnB,MAAQkB,EAAOlB,MAAQ,QAC5D2B,SAAU,MAGhB,8BACG,cAAC,IAAD,CACGN,UAAW,QACXjB,UAAWC,IAAEiB,MAAQ,KAAOJ,EAAOjB,UAAYkB,EAAQlB,SAAWI,IAAEkB,MAAQ,MAC5EC,KAAK,WACLC,KAAK,WACLC,YAAaR,EAAOjB,UAAYkB,EAAQlB,SAAWiB,EAAOjB,SAAW,WACrE0B,SAAU,MAGftC,GAAW,gCACT,qBAAKe,UAAWC,IAAEhB,QAASuC,IAAKvC,IAChC,cAAC,IAAD,CACGgC,UAAW,QACXjB,UAAWC,IAAEiB,MACbE,KAAK,OACLC,KAAK,UACLC,YAAY,eAElB,sBAAKtB,UAAWC,IAAEwB,KAAlB,UACG,cAAC,IAAD,CACGR,UAAW,QACXjB,UAAWC,IAAEyB,SACbN,KAAK,WACLC,KAAK,aACLE,SAAU,IACb,mDAEFpC,GAAa,mBAAGa,UAAWC,IAAE0B,iBAAhB,SAAmCxC,IACjD,qBAAKa,UAAWC,IAAE2B,cAAlB,SACG,wBAAQ5B,UAAWC,IAAE4B,OAAQN,SAAU,EAAvC,8BAUH5C","file":"static/js/10.6cc3e971.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__25mRJ\",\"title\":\"Login_title__1xUq8\",\"form\":\"Login_form__18eO-\",\"input\":\"Login_input__71n0k\",\"error\":\"Login_error__ZZwgo\",\"flex\":\"Login_flex__1QQYp\",\"checkbox\":\"Login_checkbox__1gMeM\",\"buttonWrapper\":\"Login_buttonWrapper__2AuT5\",\"button\":\"Login_button__wv6BG\",\"formSummeryError\":\"Login_formSummeryError__27mOD\",\"captcha\":\"Login_captcha__3JjdZ\"};","import { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { authUserLogIn } from '../../redux/auth-reducer';\r\nimport { getAuthError, getCaptcha, getIsAuth } from '../../selectors/auth-selectors';\r\nimport s from './Login.module.scss';\r\n\r\n\r\ntype MyFormValues = {\r\n   email: string\r\n   password: string\r\n   rememberMe: boolean\r\n   captcha: string\r\n}\r\n\r\n\r\nconst LoginContainer: React.FC = React.memo(() => {\r\n   const isAuth = useSelector(getIsAuth)\r\n   const captcha = useSelector(getCaptcha)\r\n   const authError = useSelector(getAuthError)\r\n   const dispatch = useDispatch()\r\n\r\n\r\n   let onSubmitForm = (formData: any) => {\r\n      dispatch(authUserLogIn(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n   };\r\n\r\n   if (isAuth) {\r\n      return <Redirect to={'/profile'} />\r\n   }\r\n\r\n   return (\r\n      <Login onSubmitForm={onSubmitForm} captcha={captcha} authError={authError} />\r\n   );\r\n})\r\n\r\nconst Login: React.FC<any> = React.memo((props) => {\r\n   return (\r\n      <div className={s.container}>\r\n         <h1 className={s.title}>Login</h1>\r\n         < LoginForm onSubmit={props.onSubmitForm} captcha={props.captcha} authError={props.authError} />\r\n      </div>\r\n   )\r\n})\r\n\r\n\r\nconst LoginForm: React.FC<any> = React.memo((props) => {\r\n   const { onSubmit, captcha, authError, } = props\r\n\r\n   let onSubmitForm = (values: any, actions: any) => {\r\n      onSubmit(values)\r\n   };\r\n\r\n   const SignupSchema = Yup.object().shape({\r\n      email: Yup.string()\r\n         .required('Field is required'),\r\n      password: Yup.string()\r\n         .required('Field is required'),\r\n   });\r\n\r\n   let initialValues: MyFormValues = { email: '', password: '', rememberMe: false, captcha: '' };\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={initialValues}\r\n         onSubmit={onSubmitForm}\r\n         validationSchema={SignupSchema}\r\n      >\r\n         {({ errors, touched }) =>\r\n            <Form className={s.form} >\r\n               <div>\r\n                  <Field\r\n                     component={'input'}\r\n                     className={s.input + ' ' + (errors.email && touched.email ? s.error : null)}\r\n                     type=\"email\"\r\n                     name='email'\r\n                     placeholder={errors.email && touched.email ? errors.email : 'Email'}\r\n                     tabIndex={1}\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <Field\r\n                     component={'input'}\r\n                     className={s.input + ' ' + (errors.password && touched.password ? s.error : null)}\r\n                     type=\"password\"\r\n                     name='password'\r\n                     placeholder={errors.password && touched.password ? errors.password : 'Password'}\r\n                     tabIndex={2}\r\n                  />\r\n               </div>\r\n               {captcha && <div>\r\n                  <img className={s.captcha} src={captcha} />\r\n                  <Field\r\n                     component={'input'}\r\n                     className={s.input}\r\n                     type=\"text\"\r\n                     name='captcha'\r\n                     placeholder='Captcha' />\r\n               </div>}\r\n               <div className={s.flex}>\r\n                  <Field\r\n                     component={'input'}\r\n                     className={s.checkbox}\r\n                     type=\"checkbox\"\r\n                     name='rememberMe'\r\n                     tabIndex={3} />\r\n                  <span> Remember me</span>\r\n               </div>\r\n               {authError && <p className={s.formSummeryError}>{authError}</p>}\r\n               <div className={s.buttonWrapper}>\r\n                  <button className={s.button} tabIndex={4}>Login</button>\r\n               </div>\r\n            </Form>\r\n         }\r\n\r\n      </Formik>\r\n   );\r\n})\r\n\r\n\r\nexport default LoginContainer"],"sourceRoot":""}